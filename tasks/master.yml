- name: "[master] - export kubeconfig"
  lineinfile:
   dest: ~/.bashrc
   line: export KUBECONFIG=/etc/kubernetes/admin.conf

- name: "[master] - net.bridge.bridge-nf-call-iptables"
  sysctl:
   name: net.bridge.bridge-nf-call-iptables
   value: 1
   sysctl_set: yes

- name: "[master] - kubernetes master config.j2"
  template:
   src: ../templates/config.j2
   dest: /etc/kubernetes/config.yml
   owner: root
   group: root
   mode: 0644
  delegate_to: "{{ item }}"
  with_items:
   - "{{ groups['master'] }}"

- name: "[master] - kubeadm master"
  shell: kubeadm init --config=/etc/kubernetes/config.yml --ignore-preflight-errors=all
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"
  async: 1800
  poll: 1
  retries: 3

- name: "[master] - compress directory /etc/kubernetes"
  archive:
   path: /etc/kubernetes/pki
   dest: /etc/kubernetes/pki.tgz
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"

- name: "kubeadm | Check if kubeadm has already configuration"
  stat:
    path: /etc/kubernetes/pki.tgz
  register: kubeadm

- name: "[master] - fetch - file kubernetes.tgz"
  fetch:
   src: /etc/kubernetes/pki.tgz
   dest: /tmp/fetched
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"
  retries: 3

- name: "[master] - copy kubernetes.tgz"
  copy:
   src: /tmp/fetched/{{ groups['master'][0] }}/etc/kubernetes/pki.tgz
   dest: /tmp/pki.tgz
  when: inventory_hostname in groups['master']

- name: "[master] - extract pki.tgz into /ec/kubernetes/pki"
  shell: |
   tar -xvf /tmp/pki.tgz -C /etc/kubernetes
   rm -rf /etc/kubernetes/pki/apiserver.*
  when: inventory_hostname in groups['master']

- name: "[master] - kubeadm master - ALL"
  shell: kubeadm init --config=/etc/kubernetes/config.yml --ignore-preflight-errors=all
  when: inventory_hostname in groups['master'] and not kubeadm.stat.exists
  poll: 0

- name: "[master] - weave network"
  shell: |
   kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"
  poll: 0

- name: "[master] - scope.yaml"
  template:
   src: ../templates/scope.yaml
   dest: /etc/kubernetes/scope.yaml
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"

- name: "[master] - scope deployment"
  shell: |
   kubectl --kubeconfig=/etc/kubernetes/admin.conf \
   apply --namespace=weave -f /etc/kubernetes/scope.yaml
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"
  poll: 0

- name: "[master] - dashboard.yaml"
  template:
   src: ../templates/kubernetes-dashboard.yaml
   dest: /etc/kubernetes/kubernetes-dashboard.yaml
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"

- name: "[master] - dashboard deployment"
  shell: |
   kubectl --kubeconfig=/etc/kubernetes/admin.conf \
   apply -f /etc/kubernetes/kubernetes-dashboard.yaml
  delegate_facts: True
  delegate_to: "{{ groups['master'][0] }}"
  poll: 0
